@page "/GestionarProducto"
@using BlazorEFUdemy.Modelo
@using BlazorEFUdemy.Servicios
@inject IServicioProducto servicioProducto

<h3>Gestionar Producto</h3>

<div class="form-group row">
    <div class="col-sm-10">
        <a href="/NuevoProducto" class="btn btn-primary m-1">Nuevo Producto</a>
    </div>
</div>

@if (listaProductos.Count == 0)
{
    <p class="text-danger"> No hay productos disponibles</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th><strong>Producto</strong></th>
                <th><strong>Precio</strong></th>
                <th><strong>Tipo de Producto</strong></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var producto in listaProductos)
            {
                <tr>
                    <td>@producto.Descripcion</td>
                    <td>@producto.Precio.ToString() $</td>
                    <td>@producto.TipoProducto.Tipo</td>
                    <td>
                        <a href="@($"ModificarProducto/{producto.Id}")" class="btn btn-primary m-1">Modificar</a>
                    </td>
                    <td>
                        <input type="submit" class="btn btn-danger" value="Eliminar" @onclick="(() => OnDelete(producto.Id))" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@if (Show)
{
    <div class="modal" tabindex="-1" role="dialog" style="display: @(Show ? "block" : "none")">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Aviso</h5>
                </div>
                <div class="modal-body">
                    <p>¿ Estas seguro que deseas continuar ? Esta accion es irreversible.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" @onclick="@(()=> DarDeBaja())">OK</button>
                    <button type="button" class="btn btn-danger" data-dismiss="modal" @onclick="@(()=> this.Show = false)">Cancelar</button>
                </div>
            </div>
        </div>
    </div>
}


@code {

    List<Producto> listaProductos = new List<Producto>();

    public bool Show { get; set; } = false;
    int idProductoAux = -1;

    private void OnDelete(int idProducto)
    {
        idProductoAux = idProducto;
        Show = true;
    }

    protected override async Task OnInitializedAsync()
    {
        listaProductos = (await servicioProducto.DameProductos()).ToList();
        StateHasChanged();
    }

    private async void DarDeBaja()
    {
        try
        {
            await servicioProducto.EliminarProducto(idProductoAux);
            listaProductos = (await servicioProducto.DameProductos()).ToList();
            this.Show = false;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            
            ex.ToString();
        }
        
    }

}
